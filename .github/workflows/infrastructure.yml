name: infrastructure
on:
  push:
    branches:
      - master
    paths:
      - 'ops/infrastructure/**'
  pull_request:
    branches:
      - master
    paths:
      - 'ops/infrastructure/**'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  infrastructure-live:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ops/infrastructure/live
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ \`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \n
            \`\`\`
            ${process.env.PLAN}
            \`\`\`
            </details>
            \n
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve

      - name: Save Outputs
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          mkdir output
          terraform-bin output -raw public_ip > output/host
          terraform-bin output -raw ssh_key_public > output/host.pub
          terraform-bin output -raw ssh_key_private > output/host.pem

      - name: Store infrastructure information
        uses: actions/upload-artifact@v2
        with:
          name: infrastructure-live
          path: ops/infrastructure/live/output/
